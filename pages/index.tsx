import { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useState } from 'react';
import { Footer } from '../src/components/big/footer/Footer';
import { Header } from '../src/components/big/header/Header';
import { FilterCategory } from '../src/components/filterCategory/FilterCategory';
import { BannerText } from '../src/components/small/bannerText/BannerText';
import { FilterAndText } from '../src/components/small/filterAndText/FilterAndText';
import { ProductCard } from '../src/components/small/productcard/ProductCard';
import { GetUser, ProductProps, useFetch } from '../src/utils/Hooks';
import styles from './index.module.scss';
import AddCircleIcon from '@mui/icons-material/AddCircle';

const Home: NextPage = () => {
  const [isShown, setIsShown] = useState(false);
  const [category, setCategory] = useState<string | undefined>();
  const [isFree, setIsFree] = useState(false);
  const { response } = useFetch('posts');
  const { user } = GetUser();

  const handleClick = () => {
    setIsShown((prevState) => !prevState);
  };

  const handleFilterChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    setCategory(e.target.value === 'All' ? undefined : e.target.value);
  };

  const categoryFilter = (post: ProductProps) =>
    category === undefined || post.category === category;

  const handleFreeOfCharge = () => {
    if (!isFree) {
      setIsFree(true);
    } else {
      setIsFree(false);
    }
  };

  const freeFilter = (post: ProductProps) => !isFree || post.price === 'Gratis';

  return (
    <div className={styles.container}>
      <Head>
        <title>Rent-a-thing</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href={'/Logo.svg'} />
      </Head>
      <Header />
      <BannerText />
      {user.id ? (
        <div className={styles.navigationLink}>
          <Link href="/new">
            <div>
              <AddCircleIcon className={styles.AddbtnLarge}></AddCircleIcon>
            </div>
          </Link>
        </div>
      ) : null}
      <div className={styles.filterNav}>
        <div className={styles.flexContainer}>
          <div className={styles.filterAndTextContainer}>
            <FilterAndText onClick={handleClick} />
          </div>
          {isShown ? (
            <FilterCategory small onChange={handleFilterChange} />
          ) : null}
        </div>
        <div className={styles.freeOfChargeContainer}>
          <input
            className={styles.freeInput}
            type="checkbox"
            value="Gratis"
            onChange={handleFreeOfCharge}
          ></input>
          <p className={styles.freeText}>Visa gratis-annonser</p>
        </div>
      </div>
      <div className={styles.productContainer}>
        <div className={styles.productGrid}>
          {response
            .filter(freeFilter)
            .filter(categoryFilter)
            .map((data: ProductProps, key) => {
              return (
                <Link href={'/detail/' + data.id} key={key}>
                  <div>
                    <ProductCard
                      title={data.title}
                      price={data.price}
                      image={data.img}
                      available={data.available}
                      id={data.id}
                      location={data.location}
                    />
                  </div>
                </Link>
              );
            })}
        </div>
      </div>
      <Footer />
    </div>
  );
};

export default Home;
